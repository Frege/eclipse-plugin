//
// This preferences-specification template declares some example
// preference fields and some conditional controls for enabling
// one field based on another.
// 
package frege.imp.preferences;

tabs {
    // There is one tab for each level of preference values:
    //  - "default" (as specified by "defvalue" attributes below)
    //  - "configuration" (shared by all Eclipse invocations from the same installation)
    //  - "instance" (shared by all Eclipse invocations using on the same workspace)
    //  - "project" (project-specific settings)
    //
    // A value for a given preference key may be set at any or all of these levels.
    //
    // Value accesses are made from a client-specified context (one of the above 4 levels,
    // though most likely either "instance" or "project").
    //
    // If no value for the given preference key exists at the specified level, it is inherited
    // from the next level above, going up to the default level (which always has a value), if
    // necessary, to find a value.
    //
    // Clients identify the desired context level for their queries when the client creates the
    // PreferencesService instance. Typically, the context will be either the instance (workspace)
    // context, or the context of some specific project.
    //
    // "in" tabs appear in the preference page; "out" tabs do not.
    // The following combination gives the "classic" Eclipse behavior.
    	default out { }
    	configuration out { }
    	instance in {  }
    	project out { }
}

page Frege {
    // TODO Customize the preference fields and their attributes
    fields {
        // START_HERE
        font    sourceFont            {
                label    "Editor Font"; 
                defvalue "Consolas" 10 normal; 
            }
        int     tabWidth              {
                label   "Tabulator Width"; 
                defvalue 4; 
            }
        boolean spacesForTabs         { 
                label   "Tab inserts spaces";
                defvalue true;
                tooltip "Is it strongly suggested to not have tabulator characters in Frege source code."; 
            }
        
        color docuColor    { label   "Documentation color "; }
        color commColor    { label   "Comment color       "; }
        color conidColor   { label   "Constructor id color"; }
        color varidColor   { label   "Variable id color   "; }
        color keywordColor { label   "Keyword color       "; }
        color specialColor { label   "Special symbol color"; }
        color opColor      { label   "Operator color      "; }
        color literalColor { label   "Literal color       "; }
        color errorColor   { label   "Error token color   "; }
         
    }
}
